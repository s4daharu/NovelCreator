/* Reset / Normalize */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  overscroll-behavior-y: contain; /* Prevents pull-to-refresh on mobile in some cases */
  background-color: var(--bg);
  color: var(--onBackground);
}

body.body-modal-open {
  overflow: hidden;
}

/* Scrollbars (adapts to theme) */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: var(--surface);
}
::-webkit-scrollbar-thumb {
  background: var(--text-secondary); /* Use a less prominent color from theme */
  border-radius: 4px;
}
::-webkit-scrollbar-thumb:hover {
  background: var(--accent); /* Use accent on hover for thumb */
}

/* Utility classes (complementing Tailwind or for standalone use) */
.hidden {
  display: none !important;
}
.flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
.flex-1 {
  flex: 1;
}
.h-screen {
  height: 100vh;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-auto {
  overflow: auto;
}

/* Link & Button defaults */
button, a {
  background: none;
  border: none;
  font: inherit;
  color: inherit;
  cursor: pointer;
  text-decoration: none;
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on mobile */
}

button:disabled, a:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 600; /* Slightly bolder headings */
  line-height: 1.3;
  color: var(--text-primary); /* Ensure headings use primary text color */
}

ul, ol {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Ensure Tailwind placeholder color uses CSS var */
.placeholder-gray-500::placeholder, /* Legacy, if used directly */
.placeholder-color-text-secondary::placeholder { /* Custom class from Tailwind config */
    color: var(--text-secondary);
    opacity: 0.7;
}


/* Adjust hover effects for Tailwind buttons if they don't use vars */
.hover\:bg-gray-700\/50:hover {
    background-color: rgba(var(--onSurface-rgb, 224,224,224), 0.1); /* Example for dark theme compatible hover */
}
html.dark .hover\:bg-gray-700:hover {
    background-color: #374151; /* Re-specify for dark if needed, or use var */
}

/* FAB specific - though Tailwind classes mostly cover this */
#addChapterFab {
    /* Ensure z-index is high enough if other fixed elements exist */
    /* z-index: 50; is already set by Tailwind class 'z-50' */
    /* Additional styles if needed, e.g. for specific transitions not covered by Tailwind */
}


/* Keyboard handling variables and classes */
:root {
  --keyboard-inset-height: 0px; /* Default value, updated by JS */
}

/*
  When the keyboard is active, adjust modals to fit the new visual viewport.
  This primarily affects their max-height to ensure content remains scrollable and accessible.
*/
body.keyboard-active .modal-overlay.active .modal {
  /* 100% of visualViewport height minus some padding to prevent touching edges */
  max-height: calc(100% - var(--keyboard-inset-height) - 2rem);
  /* Modals typically are also overflow-y: auto, so this makes them scroll internally if needed */
  /* margin-bottom could also be used to push the modal up, but max-height is often more robust for content visibility. */
  /* margin-bottom: var(--keyboard-inset-height); */
}

/*
  Adjust the Floating Action Button's position to remain visible above the keyboard.
  Original Tailwind classes: bottom-6 right-6 sm:bottom-8 sm:right-8
  1.5rem = 6 (24px), 2rem = 8 (32px)
*/
body.keyboard-active #addChapterFab {
  bottom: calc(1.5rem + var(--keyboard-inset-height));
  transition: bottom 0.2s ease-out; /* Smooth transition for FAB position */
}
@media (min-width: 640px) { /* sm breakpoint */
  body.keyboard-active #addChapterFab {
    bottom: calc(2rem + var(--keyboard-inset-height));
  }
}

/*
  Adjust the main content area where the editor resides.
  Adding padding-bottom allows its own scrollbar to reveal content that would otherwise be hidden by the keyboard.
*/
body.keyboard-active div.flex-1.overflow-hidden > main#contentArea {
   padding-bottom: var(--keyboard-inset-height);
   /* The main#contentArea is already overflow:auto, so this padding will enable scrolling its content up. */
}
